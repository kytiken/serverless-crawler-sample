service:
  name: serverless-crawler-sample

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs8.10
  environment:
    PAGE_DYNAMODB_TABLE: ${self:service}-${self:provider.stage}-page
    URL_DYNAMODB_TABLE: ${self:service}-${self:provider.stage}-url
    SLOT_QUEUE_NAME: "${self:service.name}-${self:provider.stage}-slot"
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sqs:SendMessage"
        - "sqs:GetQueueUrl"
        - "sqs:ListQueues"
      Resource: "arn:aws:sqs:${self:provider.region}:*:*"
    - Effect: "Allow"
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/*"

resources:
  Resources:
    SlotQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:provider.environment.SLOT_QUEUE_NAME}
    SlotKinesisStream:
      Type: "AWS::Kinesis::Stream"
      DeletionPolicy: Retain
      Properties:
        Name: ${self:provider.environment.SLOT_KINESIS_STREAM_NAME}
        ShardCount: 1
    PageTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.PAGE_DYNAMODB_TABLE}
    UrlTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: url
            AttributeType: S
        KeySchema:
          - AttributeName: url
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.URL_DYNAMODB_TABLE}

functions:
  addUrl:
    environment: # Service wide environment variables
      URL_DYNAMODB_TABLE: ${self:provider.environment.URL_DYNAMODB_TABLE}
    handler: handler.addUrl
    events:
      - http:
          method: post
          path: add_url

  slot:
    environment: # Service wide environment variables
      SLOT_KINESIS_STREAM_NAME: ${self:provider.environment.SLOT_KINESIS_STREAM_NAME}
      SLOT_KINESIS_STREAM_PARTITION_KEY: ${self:provider.environment.SLOT_KINESIS_STREAM_PARTITION_KEY}
    handler: handler.slot
    events:
      - http:
          method: get
          path: slot

  crawl:
    handler: handler.crawl
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - SlotQueue
              - Arn
          # batchSize: 1
          # enabled: true
